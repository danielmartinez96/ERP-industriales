/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.DefaultRowSorter;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.OrdenTrabajo;
import modelo.enumeraciones.EstadoOT;
import presentador.PListarOT;
import presentador.interfaces.IVListarOT;
import presentador.interfaces.IVOrdenTrabajo;

/**
 *
 * @author DanielM
 */
public class VListarOT extends javax.swing.JDialog implements IVListarOT{
    PListarOT presentador;
    DefaultTableModel modelo;
     Frame parent;
    /**
     * Creates new form ListarOT
     */
    public VListarOT(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent= parent;
        initComponents();
         setTitle("Listado de Ordenes de Trabajo");
        this.setLocationRelativeTo(this);
        tablaConfiguraciones();
        presentador= new PListarOT(this);
        actualizarTablaDeOT();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnSalir = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableOT = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Listado de OT");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        TableOT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableOT);

        jButton1.setText("Tratar OT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cierre Comercial");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(57, 57, 57)
                .addComponent(jButton1)
                .addGap(83, 83, 83)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 if(TableOT.getSelectedRow()!=-1)
        {
     //       int filaSeleccionada = TableAvisos.getRowSorter().
       //             convertRowIndexToModel(TableAvisos.getSelectedR,ow());
            int filaSeleccionada= TableOT.getSelectedRow();
            int i = (int) TableOT.getModel().getValueAt(filaSeleccionada, 0);
        //   (String)TableOT.getModel().getValueAt(filaSeleccionada, 4)
           EstadoOT estado=(EstadoOT)TableOT.getModel().getValueAt(filaSeleccionada, 4);
            if(estado== EstadoOT.ABIERTO|| estado==EstadoOT.TRATADA)
            {
              
              IVOrdenTrabajo vista = new VOrdenTrabajo (parent, i,true);   
              actualizarTablaDeOT();
            }else
            {
                 JOptionPane.showConfirmDialog(null, "Solo se puede tratar una orden de trabajo en estado ABIERTO o TRATADA","Operacion no posible"
, JOptionPane.CLOSED_OPTION); 
            }
            
           
            
        }else
        {
            JOptionPane.showConfirmDialog(null, "No selecciono ningun aviso","ERROR"
, JOptionPane.CLOSED_OPTION);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  if(TableOT.getSelectedRow()!=-1)
        {
     //       int filaSeleccionada = TableAvisos.getRowSorter().
       //             convertRowIndexToModel(TableAvisos.getSelectedRow());
            int filaSeleccionada= TableOT.getSelectedRow();
            int i = (int) TableOT.getModel().getValueAt(filaSeleccionada, 0);
           
           EstadoOT estado=(EstadoOT)TableOT.getModel().getValueAt(filaSeleccionada, 4);
            if(estado== EstadoOT.CERRADA_TEC)
            {
              OrdenTrabajo ot= new OrdenTrabajo();
              ot.setId(i);
              ot.setEstado(EstadoOT.CERRADA_COMERC);
              presentador.cierreComercial(ot);
              actualizarTablaDeOT();
            }else
            {
                 JOptionPane.showConfirmDialog(null, "Solo se puede hacer un cierre comercial a una orden de trabajo en estado CIERRE_TEC","Operacion no posible"
, JOptionPane.CLOSED_OPTION); 
            }
            
           
            
        }else
        {
            JOptionPane.showConfirmDialog(null, "No selecciono ningun aviso","ERROR"
, JOptionPane.CLOSED_OPTION);
        }
        // TODO add your handling code here:
   
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableOT;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables


    @Override
    public void actualizarTablaDeOT() {
    int sizeModel = modelo.getRowCount();
 
	    for (int i = 0; i < sizeModel ; i ++) {
	    	modelo.removeRow(0);
	    }
        ArrayList<OrdenTrabajo> lista ;
                
        lista = presentador.listarOT();
        
     
        Object fila [] = new Object[modelo.getColumnCount()];
        
        for(int i=0; i<lista.size(); i++){
            fila[0]=lista.get(i).getId();
            fila[1]=lista.get(i).getFechaInicio();
            fila[2]=lista.get(i).getFechaFin();
            fila[3]=lista.get(i).getFechaReal();
            fila[4]=lista.get(i).getEstado();
            fila[5]=lista.get(i).getAviso();
            fila[6]=lista.get(i).getTipo();
            fila[7]=lista.get(i).getResp();
            fila[8]=lista.get(i).getParte();
            
            
            modelo.addRow(fila);
        }
       
      
    }
    
  
       private void tablaConfiguraciones() {
        
        
    modelo= new DefaultTableModel(){ 
    @Override
    
    public boolean isCellEditable(int row, int column) {
       return false;
    }};
    
         modelo.addColumn("id");
         modelo.addColumn("Fecha Inicio");
         modelo.addColumn("Fecha Fin");
         modelo.addColumn("Fecha Real");
         modelo.addColumn("Estado");
         modelo.addColumn("Aviso");
         modelo.addColumn("Tipo OT");
         modelo.addColumn("Responsable");
         modelo.addColumn("Parte Maquina");
         
       TableOT.setModel(modelo);
       TableRowSorter sorter = new TableRowSorter(modelo);
       TableOT.setFillsViewportHeight(true);
       TableOT.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
       TableOT.getTableHeader().setReorderingAllowed(false) ;
       TableOT.getColumnModel().setColumnSelectionAllowed(false);
       TableOT.setRowSorter(sorter);
       
  //     DefaultRowSorter sort = ((DefaultRowSorter)TableOT.getRowSorter()); 
    //  list.add( new RowSorter.SortKey(1, SortOrder.DESCENDING) );
      //  sorter.setSortKeys(list);
        //sorter.sort();
       
    }
}
